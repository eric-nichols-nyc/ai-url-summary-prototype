export const test = {"text":"REAL React Interview Questions\n\nEver wondered what you'll be asked in front-end engineer/React interviews?!\n\nThis video is to give an idea of what you questions could reasonably expect from a React developer hiring process.\n\nMany of these questions are approximations of what I think you could expect as an entry-level software engineer, or the types of things I would ask if I were coming up with topics from scratch. They all offer opportunities to show off your knowledge, even if they seem basic on the surface. \n\nLet me know if you find them helpful! \n\nLinks:\nOne-on-one interview mentoring: https://superpeer.com/peterelbaum\nMy interviewing course - Ace the Front End Interview: https://gum.co/KlowV\nKent C. Dodds blogpost: https://kentcdodds.com/blog/use-terna...\n--\nFollow Me Online Here:\n\nüåè My website/blog - https://peterelbaum.com\n‚úâÔ∏è My newsletter (weekly on Sundays) - https://peterelbaum.com/subscribe/\nüó£ One-on-one mentoring - https://superpeer.com/peterelbaum\nü§ì My courses: https://peterelbaum.gumroad.com/\n\nüê¶ Twitter:   / peterelbaum  \nüíª GitHub: https://github.com/elbaumpj\n‚òéÔ∏è Office Hours: https://calendly.com/elbaumpj/saturda...\n-- \nMy gear: \n\nMain Camera: https://amzn.to/2Tv1WBe\nTripod: https://amzn.to/2t570AH\nExternal HD: https://amzn.to/2t1UphI\nMemory card: https://amzn.to/2UEQfIn\nComputer mic: https://amzn.to/2t7mUue\n--\nWho am I? \n\nI'm Peter Elbaum, a software engineer living in Raleigh, North Carolina. I make videos about code, software engineering career development, and self improvement. I also have a newsletter (https://peterelbaum.com/subscribe) and tweet my thoughts on money, work, and being a great dev. Feel free to get in touch!\n\n----------------------------------------\n\nTranscript\n\nhey everyone welcome back to the channel\n\nso i've noticed in the past couple years\n\nof uploading these videos that by far\n\nthe ones that have done the best\n\nare the ones about real interview\n\nquestions and so i thought i'd come back\n\nwith a third edition today\n\nabout specifically react so let's get\n\ninto some real front-end interview\n\nquestions so\n\na couple caveats one these are either\n\nreal questions that i have asked in past\n\njobs or have been asked\n\nin past interviews or examples of\n\nquestions\n\nthat i would ask if i were creating\n\nquestions for a react interview which\n\ni've done before\n\nso i think the point is that you can be\n\nfairly well assured i think that these\n\nare examples of real things that you\n\nwould come across\n\nin real interviews to be a react\n\ndeveloper also these are not your\n\ntypical\n\nalgorithm heavy cs kind of questions\n\nthese are practical day-to-day questions\n\nthat reflect things that you would\n\nactually need to know\n\nto do a developer job i'm not really one\n\nfor the algorithm heavy interview and so\n\nthese are reflective of my experience\n\nwhich has been much more on the\n\npractical side so\n\njust wanted you to know that going in\n\nokay so the first question\n\nis what is jsx and i know for those of\n\nyou that have done a lot of react in the\n\npast this probably seems like not even\n\nworth asking\n\nbut i think there are a couple kind of\n\ngood things that you can end up getting\n\nout of this question so\n\nthe answer is that it stands for\n\njavascript and xml\n\nso it kind of provides this xml like\n\nsyntax for you to write your javascript\n\nand render things out to the dom so that\n\ni'd say it's like more or less the most\n\nbasic answer\n\none step further is that people that\n\nhave done react for a while might know\n\nthat it's\n\nessentially just a syntactic sugar over\n\nreact dot create element and so people\n\nthat\n\nknow that it actually is just a\n\nsyntactic trigger for\n\nreact.create element would probably know\n\nthat\n\nultimately your react code is compiled\n\ndown into that\n\nand so at each point react is simply\n\ncreating elements\n\nunder the hood even though it looks like\n\nwe're just writing basically html so\n\ni think there's opportunity to shine in\n\nthis question by showing that you have\n\nan in-depth knowledge of what is\n\nactually going on under the hood another\n\nquestion kind of in this vein and a\n\nlittle bit more on the beginner side but\n\none that i still think is important\n\nis why is class class name in react and\n\nthe answer\n\nis that class is a reserved keyword in\n\njavascript and if you know that your jsx\n\nultimately is getting compiled down to\n\njavascript there would be a conflict if\n\nyou\n\nsimply use class to do your css styling\n\nbecause class is a reserved keyword in\n\njavascript so javascript would think\n\nthat you're trying to create a\n\njavascript class and not\n\nstyle an element so for that reason\n\nclass is class name\n\nin jsx so again this is kind of a\n\ncompilation question but i think another\n\nway to shine here might be to say\n\nsomething like uh you know\n\nunder the hood babel is doing the\n\ntranslation ultimately turning into\n\njavascript showing that you know\n\na little bit more about what is\n\nhappening behind the scenes and not just\n\nconsuming these great tools okay my\n\nthird question is describe\n\ndata flow in react and so at the very\n\nmost basic level the answer is going to\n\nbe\n\nthat the data flow is unidirectional and\n\ni've actually gotten\n\nthis question in the past so what does\n\nthis mean this means that all of the\n\ncomponents in react have a parent-child\n\nrelationship and typically\n\nwhat is happening is that you're passing\n\ndata down from above\n\nunidirectional going in one direction\n\nright so all the data is flowing\n\ndownwards and so this would be a great\n\nopportunity to mention\n\nprops and state so typically like the\n\nmost basic way that we're passing\n\ninformation down is through props\n\nbut there's an opportunity here to go\n\ndeeper in talking about global state\n\nmanagement which i've talked about in\n\nthe past how is it that you share\n\ndata multiple layers deep and then how\n\ndo you\n\nend up avoiding prop drilling where\n\nyou're just passing a prop down like 10\n\nlevels that would be a great opportunity\n\nto talk about\n\ncontext and global state and redux and\n\nso\n\nthis is kind of an open-ended question\n\nyou can take this wherever you want but\n\ni think at the very most basic level the\n\ndata flow is unidirectional\n\nyou need to hit on that but beyond that\n\nyou can talk a lot about how data is\n\nmanaged and react locally in component\n\nstate and then all the way up to\n\nglobal app state so you can really take\n\nthis and run with it as long as you know\n\nyour stuff\n\nand i would encourage you to research\n\nthis particular area if it's a little\n\nforeign my fourth question\n\nagain this is maybe a little bit basic\n\non the surface but i think there's\n\nopportunity to do\n\ninteresting stuff so the question is how\n\nwould you delay\n\nan api call until a component has\n\nmounted and so there are two different\n\nways you can answer this question\n\nthe traditional way in a class would be\n\nusing component mount and when you start\n\nto get into component did mount i think\n\nyou have a great opportunity to talk\n\nabout life cycle methods and really show\n\nan in-depth understanding of how the\n\ncomponent life cycle works so you\n\ndefinitely need to hit on component did\n\nmount which essentially\n\nis a function that runs after the\n\ncomponent is mounted\n\nthat allows you to then run other code\n\nand kind of do whatever you want after\n\nthat point so you make sure that you're\n\nnot making your api call before the\n\ncomponent has mounted and kind of\n\nmissing the appropriate stage in the\n\nlife cycle to render data out the second\n\nway that i would answer this question\n\nand i would hit on both\n\nis that now that we have functional\n\ncomponents and hooks that you don't need\n\nto write classes anymore you don't need\n\ncomponent dead mount and so the way that\n\nyou would do this\n\nis to use the use effect hook and pass\n\nan empty array as the second argument\n\nand what that does is it essentially\n\nmimics component dead mount and so then\n\ninside of the use effect you could write\n\nyour api call and it would work\n\nbasically just the same way now you've\n\nalso got an opportunity here to talk\n\nabout hooks and show off your hooks\n\nknowledge so i would make sure to\n\nmention\n\nthat you know that when you pass certain\n\nvariables to the array as the second\n\nargument and use the fact that you know\n\nthat use effect will run when those\n\nchange\n\nalso i would touch on the fact that\n\nideally you know how to replicate the\n\nother life cycle methods using use\n\neffect which is possible\n\nso i would make sure to touch on that as\n\nwell i would brush up on your knowledge\n\nthere\n\nif maybe you are a little bit weak at\n\nthis point i think\n\nit's definitely going to be great to\n\nknow how to use the most modern\n\niteration\n\nof components which at this point is\n\nfunctional components with hooks\n\nand my fifth question it's a little bit\n\nof a trick question\n\nbut i love this question it actually\n\ncomes out practically\n\na lot and that is should you use ternary\n\nor the and operator to\n\nconditionally render react components\n\nand i actually\n\ngot this from a kent c dodds blog post\n\nbut it's something that comes up\n\nall the time and that is that you should\n\nuse ternaries because\n\nif you use the and operator you end up\n\nencountering\n\nthis certain kind of problem where\n\nessentially if you're checking for\n\nlet's say the length of an array if you\n\nwant to render things out\n\nif you use the and operator what happens\n\nis if the length is zero\n\njavascript knows that zero and something\n\nis always going to be falsy and so it\n\ndoesn't even bother\n\nevaluating the right side of the\n\nexpression and\n\nrendering anything out and so\n\nessentially what happens is that just a\n\nzero gets rendered to the page and i'm\n\nsure if you've done react for any amount\n\nof time this has happened to you\n\nit's happened to me a lot and can't see\n\ndodds actually mentions in this blog\n\npost\n\nthat he shipped this bug to production\n\nat paypal which i thought was kind of\n\nfunny and it just goes to show you the\n\nimportance of making sure that\n\nthese things are kind of all buttoned up\n\nbut i think it's a really really common\n\npattern to just say okay we're going to\n\nuse the and operator but\n\nternaries is actually the best because\n\nit helps you to avoid this specific bug\n\nso i'll go ahead and link that below\n\nit's definitely worth a read a few of my\n\ncolleagues have mentioned that this blog\n\npost has been really helpful to them so\n\ni would definitely check it out so these\n\nare kind of five interview questions\n\nthat i would ask or have been asked and\n\ni hope you find them helpful\n\nof course you know if someone really\n\nknows react by\n\nhow they write it and so talking about\n\nit in kind of a conversational way\n\nmight not be the best way to evaluate\n\nthere's take-home projects there's other\n\nstuff\n\ni'll do future videos on how to navigate\n\nthose but typically\n\nin a lot of interviews in my experience\n\nthere's at least some kind of spoken\n\npart and so if i were doing kind of a\n\nmore conversational interview these\n\nare specific kinds of questions that i\n\nwould ask so like i said hope you found\n\nthem helpful\n\nif you're still here you'd probably like\n\nthe rest of my channel so consider\n\nsubscribing\n\nthanks so much for watching to the end\n\nand i'll see you in the next one\n\n[Music]","metadata":{"title":"REAL React Interview Questions","description":"Ever wondered what you&#39;ll be asked in front-end engineer/React interviews?!This video is to give an idea of what you questions could reasonably expect from a...","keywords":"become a software developer, beginner javascript, beginner javascript tutorial, coding, javascript, javascript 2020, javascript basics, javascript essentials, javascript summary, learn beginner javascript, learn javascript fast, learn programming, learn to code, must know javascript, programming, react, s0ftware developer, software development, web development, real front end interview, real react interview, real front end interview questions, real developer interview","og:site_name":"YouTube","og:url":"https://www.youtube.com/watch?v=8bhp89AIsnc","og:title":"REAL React Interview Questions","og:image":"https://i.ytimg.com/vi/8bhp89AIsnc/maxresdefault.jpg","og:image:width":"1280","og:image:height":"720","og:description":"Ever wondered what you&#39;ll be asked in front-end engineer/React interviews?!This video is to give an idea of what you questions could reasonably expect from a...","al:ios:app_store_id":"544007664","al:ios:app_name":"YouTube","al:ios:url":"vnd.youtube://www.youtube.com/watch?v=8bhp89AIsnc&amp;feature=applinks","al:android:url":"vnd.youtube://www.youtube.com/watch?v=8bhp89AIsnc&amp;feature=applinks","al:web:url":"http://www.youtube.com/watch?v=8bhp89AIsnc&amp;feature=applinks","og:type":"video.other","og:video:url":"https://www.youtube.com/embed/8bhp89AIsnc","og:video:secure_url":"https://www.youtube.com/embed/8bhp89AIsnc","og:video:type":"text/html","og:video:width":"1280","og:video:height":"720","al:android:app_name":"YouTube","al:android:package":"com.google.android.youtube","og:video:tag":"real developer interview","fb:app_id":"87741124305","twitter:title":"REAL React Interview Questions","twitter:description":"Ever wondered what you&#39;ll be asked in front-end engineer/React interviews?!This video is to give an idea of what you questions could reasonably expect from a..."},"jsonld":{"@context":"http://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"item":{"@id":"http://www.youtube.com/@PeterElbaum","name":"Peter Elbaum"}}]},"credits":2}